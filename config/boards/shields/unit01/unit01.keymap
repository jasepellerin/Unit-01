#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define SYMBOLS 1
#define NUMBERS 2
#define MOVEMENT 3
#define FUNCTIONS 4

  &mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
  };

  &sk {
    release-after-ms = <2000>;
    quick-release;
  };

 / {
  
  combos {
    compatible = "zmk,combos";
    combo_function {
      timeout-ms = <30>;
      key-positions = <9 16>;
      bindings = <&to FUNCTIONS>;
    };
    combo_reset_left {
      timeout-ms = <30>;
      key-positions = <0 1 2 3>;
      bindings = <&sys_reset>;
    };
    combo_reset_right {
      timeout-ms = <30>;
      key-positions = <4 5 6 7>;
      bindings = <&sys_reset>;
    };
    combo_bootloader_left {
      timeout-ms = <30>;
      key-positions = <19 20 21 22>;
      bindings = <&bootloader>;
    };
    combo_bootloader_right {
      timeout-ms = <30>;
      key-positions = <23 24 25 26>;
      bindings = <&bootloader>;
    };
  };

  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <250>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    mo_to: behavior_mo_to {
        compatible = "zmk,behavior-hold-tap";
        label = "MO_TO";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&to>;
    };
    brc: tap_dance_0 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_0";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LBRC>, <&kp RBRC>;
    };
    bkt: tap_dance_1 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_1";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LBKT>, <&kp RBKT>;
    };
    par: tap_dance_2 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_2";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LPAR>, <&kp RPAR>;
    };
    ltgt: tap_dance_3 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_3";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LT>, <&kp GT>;
    };
    qt: tap_dance_4 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_4";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&lt MOVEMENT SQT>, <&kp DQT>;
    };
    colon: tap_dance_5 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_5";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp COLON>, <&kp SEMI>;
    };
    slh: tap_dance_6 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_6";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp FSLH>, <&kp BSLH>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    Base_layer {
      bindings = <
                              &kp W                 &kp E                 &kp R                 &kp T                                                                 &kp Y                 &kp U                 &kp I                 &kp O                 
        &lt MOVEMENT A        &hm LCTRL S           &hm LMETA D           &hm LALT F            &kp G                                                                 &kp H                 &hm RALT J            &hm RMETA K           &hm RCTRL L           &lt MOVEMENT P                 
        &kp Z                 &kp X                 &kp C                 &kp V                 &kp B                                                                 &kp N                 &kp M                 &kp Q                 &kp BSPC              &kp RET                      
                                                                                                &kp SPACE             &kp LSHIFT                &kp LMETA             &mo_to SYMBOLS NUMBERS           
      >;
    };

    Symbols_layer {
      bindings = <
                              &kp AT                &kp HASH              &kp DOLLAR            &kp PRCNT                                                             &kp CARET             &kp AMPS              &kp STAR              &kp EQUAL                 
        &lt MOVEMENT EXCL     &kp QMARK             &kp DOT               &ltgt                 &kp GRAVE                                                             &par                  &brc                  &bkt                  &colon                &qt         
        &kp UNDER             &kp MINUS             &kp PLUS              &kp PIPE              &kp TILDE                                                             &slh                  &kp COMMA             &kp DOT               &trans                &trans                
                                                                                                &to BASE              &trans                    &trans                &to NUMBERS           
      >;
    };

    Numbers_layer {
      bindings = <
                              &kp N7                &kp N8                &kp N9                &kp PLUS                                                              &none                 &none                 &none                 &none                 
        &lt MOVEMENT UNDER    &kp N4                &kp N5                &kp N6                &kp MINUS                                                             &kp DOT               &kp COMMA             &kp BACKSLASH         &none                 &lt MOVEMENT O          
        &kp N0                &kp N1                &kp N2                &kp N3                &kp EQUAL                                                             &none                 &none                 &none                 &trans                &trans                
                                                                                                &to BASE              &trans                    &trans                &to SYMBOLS           
      >;
    };
    
    Movement_layer {
      bindings = <
                              &kp HOME              &kp UP                &kp END               &kp PG_UP                                                             &kp C_AC_BACK         &kp C_AC_REFRESH      &kp C_AC_FORWARD      &none                 
        &kp TAB               &hm LCTRL LEFT        &hm LMETA DOWN        &hm LALT RIGHT        &kp PG_DN                                                             &kp LEFT              &hm META DOWN         &hm RALT UP           &hm RCTRL RIGHT       &kp TAB
        &kp ESC               &none                 &none                 &none                 &none                                                                 &none                 &none                 &none                 &trans                &trans                
                                                                                                &to BASE              &trans                    &trans                &kp LALT                 
      >;
    };

    Functions_layer {
      bindings = <
                              &kp ESC               &kp C_PREV            &kp C_NEXT            &kp C_PP                                                              &kp C_AC_BACK         &kp C_AC_REFRESH      &kp C_AC_FORWARD      &none                 
        &bootloader           &kp F1                &kp F2                &kp F3                &kp F4                                                                &kp F5                &kp F6                &kp F7                &kp F8                &bootloader           
        &bt BT_CLR            &none                 &bt BT_NXT            &bt BT_PRV            &none                                                                 &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3          &trans                &trans                
                                                                                                &to BASE              &trans                    &trans                &kp LALT              
      >;
    };

  };
};
