#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define SYMBOLS 1
#define NUMBERS 2
#define FUNCTIONS 3

  &mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
  };

  &sk {
    release-after-ms = <2000>;
    quick-release;
  };

/ {

  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <300>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    td0: tap_dance_0 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_0";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LBRC>, <&kp RBRC>;
    };
    td1: tap_dance_1 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_1";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LBKT>, <&kp RBKT>;
    };
    td2: tap_dance_2 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_2";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LPAR>, <&kp RPAR>;
    };
    td3: tap_dance_3 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_3";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LT>, <&kp GT>;
    };
    td4: tap_dance_4 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_4";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp SQT>, <&kp DQT>;
    };
    td5: tap_dance_5 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_5";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp COLON>, <&kp SEMI>;
    };
    atab: a_tab {
      compatible = "zmk,behavior-mod-morph";
      label = "A_TAB";
      #binding-cells = <0>;
      bindings = <&kp A>, <&kp TAB>;
      mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
    };
    left: left {
      compatible = "zmk,behavior-mod-morph";
      label = "LEFT_ARR";
      #binding-cells = <0>;
      bindings = <&hm LCTL R>, <&kp LEFT>;
      mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
    };
    right: right {
      compatible = "zmk,behavior-mod-morph";
      label = "RIGHT_ARR";
      #binding-cells = <0>;
      bindings = <&hm LMETA T>, <&kp RIGHT>;
      mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
    };
    up: up {
      compatible = "zmk,behavior-mod-morph";
      label = "UP_ARR";
      #binding-cells = <0>;
      bindings = <&kp F>, <&kp UP>;
      mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
    };
    down: down {
      compatible = "zmk,behavior-mod-morph";
      label = "DOWN_ARR";
      #binding-cells = <0>;
      bindings = <&hm LALT S>, <&kp DOWN>;
      mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    Base_layer {
      bindings = <
                              &kp W                 &kp F                 &kp P                 &kp B                                                                 &kp J                 &kp L                 &kp U                 &kp Y                 
        &kp A                 &hm LCTL R            &hm LALT S            &hm LMETA T           &kp G                                                                 &kp M                 &hm RMETA N           &hm RALT E            &hm RCTL I            &kp O                 
        &kp Z                 &kp X                 &kp C                 &kp V                 &kp D                                                                 &kp K                 &kp H                 &kp Q                 &kp BSPC              &kp RET                      
                                                                                                &mt LC(LS(LALT)) SPC  &sk LSHIFT                &sk LCTRL             &to SYMBOLS           
      >;
    };

    Symbols_layer {
      bindings = <
                              &kp AT                &kp HASH              &kp DOLLAR            &kp PRCNT                                                             &kp CARET             &kp AMPS              &kp STAR              &none                 
        &kp EXCL              &kp PIPE              &kp SLASH             &td5                  &td4                                                                &td0                  &td1                  &td2                  &td3                  &to FUNCTIONS         
        &kp GRAVE             &kp TILDE             &kp QMARK             &none                 &none                                                             &kp DOT               &kp COMMA             &kp SQT               &trans                &trans                
                                                                                                &to BASE              &kp LMETA                 &sk LALT              &to NUMBERS           
      >;
    };

    Numbers_layer {
      bindings = <
                              &kp N7                &kp N8                &kp N9                &kp PLUS                                                              &none                 &none                 &none                 &none                 
        &kp UNDER             &kp N4                &kp N5                &kp N6                &kp MINUS                                                             &kp LEFT              &kp DOWN              &kp UP                &kp RIGHT             &to SYMBOLS           
        &kp N0                &kp N1                &kp N2                &kp N3                &kp EQUAL                                                             &kp DOT               &kp COMMA             &kp BACKSLASH         &trans                &trans                
                                                                                                &to BASE              &kp LMETA                 &sk LALT              &to FUNCTIONS         
      >;
    };

    Functions_layer {
      bindings = <
                              &kp ESC               &kp C_PREV            &kp C_NEXT            &kp C_PP                                                              &kp C_AC_BACK         &kp C_AC_REFRESH      &kp C_AC_FORWARD      &none                 
        &kp TAB               &none                 &kp LC(LS(TAB))       &kp RC(TAB)           &none                                                                 &kp LEFT              &kp DOWN              &kp UP                &kp RIGHT             &to NUMBERS           
        &none                 &bt BT_CLR            &bt BT_NXT            &bt BT_PRV            &none                                                                 &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3          &trans                &trans                
                                                                                                &to BASE              &kp LMETA                 &sk LALT              &to SYMBOLS           
      >;
    };

  };
};